{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export function fetchImages(value) {\r\n  const API_KEY = '47671198-bf70cd038d5f77d4168ecf4e9'; \r\n  const params = new URLSearchParams({\r\n    key: API_KEY,\r\n    q: value,\r\n    image_type: 'photo',\r\n    orientation: 'horizontal',\r\n    safesearch: true,\r\n  });\r\n  return fetch(`https://pixabay.com/api/?${params}`)\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText || 'Something went wrong');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(obj => {\r\n      if (!obj.hits.length) {\r\n        throw new Error(\r\n          'Sorry, there are no images matching your search query. Please, try again'\r\n        );\r\n      }\r\n      return obj;\r\n    });\r\n}\r\n","export function renderImages(arr) {\r\n  return arr\r\n    .map(\r\n      ({\r\n        webformatURL,\r\n        largeImageURL,\r\n        tags,\r\n        likes,\r\n        views,\r\n        comments,\r\n        downloads,\r\n      }) => `\r\n                <a href=\"${largeImageURL}\" class=\"list-item\">\r\n                    <div class=\"describe\">\r\n                        <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"list-image\">\r\n                    </div>\r\n                    <ul class=\"categories\">\r\n                        <li class=\"categories-item\">\r\n                            <h2 class=\"link-text\">Likes</h2>\r\n                            <p class=\"number\">${likes}</p>\r\n                        </li>\r\n                        <li class=\"categories-item\">\r\n                            <h2 class=\"link-text\">Views</h2>\r\n                            <p class=\"number\">${views}</p>\r\n                        </li>\r\n                        <li class=\"categories-item\">\r\n                            <h2 class=\"link-text\">Comments</h2>\r\n                            <p class=\"number\">${comments}</p>\r\n                        </li>\r\n                        <li class=\"categories-item\">\r\n                            <h2 class=\"link-text\">Downloads</h2>\r\n                            <p class=\"number\">${downloads}</p>\r\n                        </li>\r\n                    </ul>\r\n                </a>\r\n            </li>\r\n        `\r\n    )\r\n    .join('');\r\n}\r\nexport default renderImages;\r\n","import iziToast from 'izitoast';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\nimport SimpleLightbox from 'simplelightbox';\r\nimport 'simplelightbox/dist/simple-lightbox.min.css';\r\nimport { fetchImages } from './js/pixabay-api';\r\nimport { renderImages } from './js/render-functions';\r\nconst form = document.querySelector('.form');\r\nconst input = document.querySelector('input[name=\"search\"]');\r\nconst list = document.querySelector('.list');\r\nconst loading = document.querySelector('.loader');\r\nform.addEventListener('submit', submitForm);\r\nfunction submitForm(event) {\r\n  event.preventDefault();\r\n  const searchValue = input.value.trim();\r\n  if (!searchValue) {\r\n    iziToast.warning({\r\n      position: 'topRight',\r\n      message: 'Please enter a search item.',\r\n    });\r\n    return;\r\n  }\r\n  list.innerHTML = '';\r\n  loading.style.display = 'inline-block'; \r\n  fetchImages(searchValue)\r\n    .then(({ hits, total }) => {\r\n      if (total === 0) {\r\n        iziToast.error({\r\n          position: 'topRight',\r\n          message: 'Sorry, no images found. Please try again!',\r\n        });\r\n        return;\r\n      }\r\n      list.innerHTML = renderImages(hits);\r\n      initSimpleLightbox();\r\n    })\r\n    .catch(error => {\r\n      iziToast.error({\r\n        position: 'topRight',\r\n        message: error.message,\r\n      });\r\n    })\r\n    .finally(() => {\r\n      loading.style.display = 'none'; \r\n    });\r\n}\r\nfunction initSimpleLightbox() {\r\n  const lightbox = new SimpleLightbox('.list-item', {\r\n    captions: true,\r\n    captionsData: 'alt',\r\n    captionDelay: 150,\r\n  });\r\n  lightbox.refresh();\r\n}\r\n"],"names":["fetchImages","value","API_KEY","params","response","obj","renderImages","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","input","list","loading","submitForm","event","searchValue","iziToast","hits","total","initSimpleLightbox","error","SimpleLightbox"],"mappings":"6vBAAO,SAASA,EAAYC,EAAO,CACjC,MAAMC,EAAU,qCACVC,EAAS,IAAI,gBAAgB,CACjC,IAAKD,EACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EACD,OAAO,MAAM,4BAA4BE,CAAM,EAAE,EAC9C,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,YAAc,sBAAsB,EAE/D,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,GAAO,CACX,GAAI,CAACA,EAAI,KAAK,OACZ,MAAM,IAAI,MACR,0EACV,EAEM,OAAOA,CACb,CAAK,CACL,CCxBO,SAASC,EAAaC,EAAK,CAChC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA,2BACeL,CAAa;AAAA;AAAA,oCAEJD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,gDAKdC,CAAK;AAAA;AAAA;AAAA;AAAA,gDAILC,CAAK;AAAA;AAAA;AAAA;AAAA,gDAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,gDAIRC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA,SAMpD,EACA,KAAK,EAAE,CACZ,CCjCA,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,sBAAsB,EACrDC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAU,SAAS,cAAc,SAAS,EAChDH,EAAK,iBAAiB,SAAUI,CAAU,EAC1C,SAASA,EAAWC,EAAO,CACzBA,EAAM,eAAc,EACpB,MAAMC,EAAcL,EAAM,MAAM,KAAI,EACpC,GAAI,CAACK,EAAa,CAChBC,EAAS,QAAQ,CACf,SAAU,WACV,QAAS,6BACf,CAAK,EACD,MACD,CACDL,EAAK,UAAY,GACjBC,EAAQ,MAAM,QAAU,eACxBlB,EAAYqB,CAAW,EACpB,KAAK,CAAC,CAAE,KAAAE,EAAM,MAAAC,KAAY,CACzB,GAAIA,IAAU,EAAG,CACfF,EAAS,MAAM,CACb,SAAU,WACV,QAAS,2CACnB,CAAS,EACD,MACD,CACDL,EAAK,UAAYX,EAAaiB,CAAI,EAClCE,GACN,CAAK,EACA,MAAMC,GAAS,CACdJ,EAAS,MAAM,CACb,SAAU,WACV,QAASI,EAAM,OACvB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbR,EAAQ,MAAM,QAAU,MAC9B,CAAK,CACL,CACA,SAASO,GAAqB,CACX,IAAIE,EAAe,aAAc,CAChD,SAAU,GACV,aAAc,MACd,aAAc,GAClB,CAAG,EACQ,QAAO,CAClB"}